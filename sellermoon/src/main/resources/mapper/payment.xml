<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.paymentMapper">
   <resultMap type="kh.sellermoon.member.vo.PaymentVO" id="paymentMap"></resultMap>
  
   <insert id="paymentInsert" parameterType="map">
  INSERT ALL
        INTO TB_ORDER (ORDER_NO, MEMBER_NO, CART_NO, ORDER_PAYMENT
        , ORDER_DATE, ORDER_AMOUNT, ORDER_USED_POINT)
        VALUES(#{ORDER_NO}, #{MEMBER_NO},#{CART_NO}, #{ORDER_PAYMENT}
        ,to_char(sysdate, 'YYYY/MM/DD HH24:MI:SS'), #{ORDER_AMOUNT}, #{ORDER_USED_POINT})
        INTO TB_PURCHASE (PURCHASE_NO, ORDER_NO, PURCHASE_METHOD)
        VALUES(#{PURCHASE_NO}, #{ORDER_NO}, #{PURCHASE_METHOD})
         INTO TB_ORDER_DE   (ORDER_DE_NO, ORDER_NO, ORDER_DE_QUANTITY
         ,ORDER_DE_PRICE,ORDER_DE_CANCEL)
        VALUES(#{ORDER_DE_NO}, #{ORDER_NO}, #{ORDER_DE_QUANTITY}
        , #{ORDER_DE_PRICE}, #{ORDER_DE_CANCEL})
         INTO TB_DELIVERY  (DELIVERY_STATUS, ORDER_NO, DELIVERY_ADDRESS, DELIVERY_PHONE,DELIVERY_FEE)
        VALUES(#{DELIVERY_STATUS}, #{ORDER_NO}, #{DELIVERY_ADDRESS}, #{DELIVERY_PHONE},#{DELIVERY_FEE}) 
        SELECT * FROM DUAL 
   </insert>
   
   <insert id="spaymentInsert" parameterType="map">
  INSERT ALL
        INTO TB_ORDER (ORDER_NO, MEMBER_NO, CART_NO, ORDER_PAYMENT
        , ORDER_DATE, ORDER_AMOUNT, ORDER_USED_POINT)
        VALUES(#{ORDER_NO}, #{MEMBER_NO},#{CART_NO}, #{ORDER_PAYMENT}
        ,to_char(sysdate, 'YYYY/MM/DD HH24:MI:SS'), #{ORDER_AMOUNT}, #{ORDER_USED_POINT})
        INTO TB_PURCHASE (PURCHASE_NO, ORDER_NO, PURCHASE_METHOD)
        VALUES(#{PURCHASE_NO}, #{ORDER_NO}, #{PURCHASE_METHOD})
         INTO TB_ORDER_DE   (ORDER_DE_NO, ORDER_NO, ORDER_DE_QUANTITY
         ,ORDER_DE_PRICE,ORDER_DE_CANCEL)
        VALUES(#{ORDER_DE_NO}, #{ORDER_NO}, #{ORDER_DE_QUANTITY}
        , #{ORDER_DE_PRICE}, #{ORDER_DE_CANCEL})
         INTO TB_DELIVERY  (DELIVERY_STATUS, ORDER_NO, DELIVERY_ADDRESS, DELIVERY_PHONE)
        VALUES(#{DELIVERY_STATUS}, #{ORDER_NO}, #{DELIVERY_ADDRESS}, #{DELIVERY_PHONE}) 
         INTO TB_SUBS  (SUB_NO, MD_NO, MEMBER_NO)
        VALUES(#{SUB_NO}, #{MD_NO}, #{MEMBER_NO}) 
        SELECT * FROM DUAL 
   </insert>

   <select id="paymentList" parameterType="map" resultType="java.util.Map">   
      SELECT car.member_no, car.cart_no, car.order_type, car.cart_quantity
             ,md.md_no, md.md_name, md.md_brand, md.md_price, md.md_image_url, md.md_discount
      FROM tb_cart car, tb_md md
      WHERE car.md_no = md.md_no
      AND car.order_type = 'O'
      AND car.member_no = #{member_no}
   </select>    
   
   <select id="payTotal" parameterType="map" resultType="java.util.Map">   
      SELECT 
             DISTINCT sum(md_price*cart_quantity) OVER (PARTITION BY order_type) as order_amount
      FROM tb_cart car, tb_md md
      WHERE car.md_no = md.md_no
      AND car.order_type = 'O'
      AND car.member_no = #{member_no}
   </select>    
   
   
   
   <select id="spaymentList" parameterType="map" resultType="java.util.Map">   
      SELECT car.member_no, car.cart_no, car.order_type, car.cart_quantity
             ,md.md_no, md.md_name, md.md_brand, md.md_price, md.md_image_url, md.md_discount
      FROM tb_cart car, tb_md md
      WHERE car.md_no = md.md_no
      AND car.order_type = 'T'
      AND car.member_no = #{member_no}
   </select>    
   
   <select id="spayTotal" parameterType="map" resultType="java.util.Map">   
      SELECT 
             DISTINCT sum(md_price*cart_quantity) OVER (PARTITION BY order_type) as order_amount
      FROM tb_cart car, tb_md md
      WHERE car.md_no = md.md_no
      AND car.order_type = 'T'
      AND car.member_no = #{member_no}
   </select>    
   
<!-- 결제 후 포인트 업데이트 -->
   <update id="payPointUpdate" parameterType="map">
      MERGE INTO TB_POINT
      USING
      (SELECT TB_ORDER.ORDER_NO, TB_ORDER.ORDER_USED_POINT
      , TB_POINT.MEMBER_NO,POINT_USED_SAVED
      FROM TB_ORDER INNER JOIN TB_POINT
      ON TB_POINT.MEMBER_NO = TB_ORDER.MEMBER_NO
      WHERE TB_POINT.MEMBER_NO = #{MEMBER_NO}) TB_ORDER
      ON (TB_POINT.MEMBER_NO = #{MEMBER_NO}
      AND TB_ORDER.ORDER_NO = #{ORDER_NO})
      WHEN MATCHED THEN UPDATE SET
      TB_POINT.POINT_USED_SAVED =
      (TB_ORDER.POINT_USED_SAVED-TB_ORDER.ORDER_USED_POINT)
   </update>

   
   </mapper>